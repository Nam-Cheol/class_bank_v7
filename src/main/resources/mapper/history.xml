<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.tenco.bank.repository.interfaces.HistoryRepository">
	<!-- 반드시 세미클론을 제거해야 한다. (;) -->
	
	<!-- id는 매칭되어 있는 인터페이스의 메소드 명과 같아야 한다. -->
	<insert id="insert">
		INSERT INTO history_tb(amount, w_account_id, d_account_id, w_balance, d_balance)
		VALUES (#{amount}, #{wAccount}, #{dAccount}, #{wBalance}, #{dBalance})
	</insert>
	
	<update id="updateById">
		UPDATE history_tb
		SET 
		amount = #{amount},
		w_account_id = #{wAccount},
		d_account_id = #{dAccount},
		w_balance = #{wBalance},
		d_balance = #{dBalance}
		WHERE id = #{id}
	</update>
	
	<delete id="deleteById">
		DELETE FROM history_tb
		WHERE id = #{id}
	</delete>
	
	<select id="findById" resultType="com.tenco.bank.repository.model.History">
		SELECT *
		FROM history_tb
		WHERE id = #{id}
	</select>
	
	<select id="findAll" resultType="com.tenco.bank.repository.model.History">
		SELECT *
		FROM history_tb
	</select>
	
	<select id="findByAccountIdAndTypeOfHistory" resultType="com.tenco.bank.repository.model.HistoryAccount">
		
		<if test="type == 'all'">
			
			SELECT h.id, h.amount,
				CASE
					WHEN h.w_account_id = #{accountId} THEN (h.w_balance)
			        WHEN h.d_account_id = #{accountId} THEN (h.d_balance)
			    END AS balance,
			    CAST(coalesce(wa.number, 'ATM') AS CHAR(10)) AS sender,
			    CAST(coalesce(da.number, 'ATM') AS CHAR(10)) AS receiver,
			    h.created_at
			FROM history_tb as h
			LEFT JOIN account_tb AS wa
			ON h.w_account_id = wa.id
			LEFT JOIN account_tb AS da
			ON h.d_account_id = da.id
			WHERE h.w_account_id = #{accountId} OR h.d_account_id = #{accountId}
			
		</if>
		
		<if test="type == 'deposit'">
		
			SELECT h.id, h.amount, h.d_balance AS balance, h.created_at,
					coalesce(CAST(wa.number AS CHAR(10)), 'ATM') AS sender,
			        coalesce(CAST(da.number AS CHAR(10)), 'ATM') AS receiver
			FROM history_tb AS h
			LEFT JOIN account_tb AS wa
			ON wa.id = h.w_account_id
			LEFT JOIN account_tb AS da
			ON da.id = h.d_account_id
			WHERE h.d_account_id = #{accountId}
		
		</if>
		
		<if test="type == 'withdrawal'">
		
			SELECT h.id, h.amount, h.w_balance AS balance, h.created_at,
					coalesce(CAST(wa.number AS CHAR(10)), 'ATM') AS sender,
			        coalesce(CAST(da.number AS CHAR(10)), 'ATM') AS receiver
			FROM history_tb AS h
			LEFT JOIN account_tb AS wa
			ON wa.id = h.w_account_id
			LEFT JOIN account_tb AS da
			ON da.id = h.d_account_id
			WHERE h.w_account_id = #{accountId}
		
		</if>
		
	</select>
	
</mapper>